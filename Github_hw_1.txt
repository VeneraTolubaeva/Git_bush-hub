GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON. => https://github.com/VeneraTolubaeva/JSON.git
 5. Клонировать репозиторий JSON на локальный компьютер. => $ git clone https://github.com/VeneraTolubaeva/JSON.git
 6. Внутри локального JSON создать файл “new.json”.
 7. Добавить файл под гит. => $ git add new.json
 8. Закоммитить файл. => $ git commit -m 'new file json'
 9. Отправить файл на внешний GitHub репозиторий. => git push origin main
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 11. Отправить изменения на внешний репозиторий. => $ git commit -am "add about me"   $ git push
 12. Создать файл preferences.json => $ cat > preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. => $ cat > preferences.json
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON => cat > skils.json
 15. Отправить сразу 2 файла на внешний репозиторий.=> $ git add . $ git commit -am "add 2 files" $ git push
 16. На веб интерфейсе создать файл bug_report.json. => https://github.com/VeneraTolubaeva/JSON/blob/main/bug_report.json
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON => $ git pull


XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер. => $ git clone https://github.com/VeneraTolubaeva/XML.git
 23. Внутри локального XML создать файл “new.xml”. => $ cat > new.xmlgot add 
 24. Добавить файл под гит. => $ git add new.xml
 25. Закоммитить файл. => $ git commit -m "add new.xml"
 26. Отправить файл на внешний GitHub репозиторий. git => git push -u origin
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. => https://github.com/VeneraTolubaeva/XML/blob/main/new.xml
 28. Отправить изменения на внешний репозиторий. => $ git add new.xml => $ git commit -m "update new.xml" => $ git push -u origin
 29. Создать файл preferences.xml => https://github.com/VeneraTolubaeva/XML/blob/main/preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML => $ touch skils.xml => $ vim skils.xml => https://github.com/VeneraTolubaeva/XML/blob/main/skils.xml
 32. Сделать коммит в одну строку. => $ git commit -am "add skils and preferences xml"
 33. Отправить сразу 2 файла на внешний репозиторий. => $ git push
 34. На веб интерфейсе создать файл bug_report.xml. => https://github.com/VeneraTolubaeva/XML/blob/main/bug_report.xml
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML => $ git pull


