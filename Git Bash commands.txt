Токен: 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

Команды:

pwd   выводит текущую рабочую директорию.
cd  (+name) открыть папку
cd ..  выйти из папки на 1 уровень назад
cd ../.. выйти из папки на 2 уровеня назад
cd - вернуться в папку в уоторой был


mkdir  (+name)  создать папку
mkdir -p (+name+name.....) создание директории( папки в папке)

touch  (+name+расширение файла) создать файл
>  (+name+расширение файла) создать файл


rm filename или foldername удалить файл
rm -R foldername  если папка не пуста


cp   копировать файл путь/имя (откуда) > путь/имя (куда)


mv откуда/что куда/что    (  mv l_1/f6.txt l_3/f6.txt )
mv filename ../path to / name  переместить файл на дирректорию выше
ls foldername/* foldernsme  перемещение всех файлов из папки в папку


ls        просмотреть всё что находится в папке строкой
ls -l     просмотреть всё что находится в папке списком
ls -la   просмотреть всё что находится в папке списком + скрытые файлы
ls  name folder вывести содержимое "строкой" папки не находясь в ней 
ls  -la вывести содержимое "списком" папки не находясь в ней 
ls -R вывести содержимое "строкой" всех папок
ls -la -R вывести содержимое "списком" всех папок
ls | grep filename  - вывод всех файлов согласно поиску

vim (+name file) редактировать файл
:w  сохранить
:wq сохранить и закрыть
:q! закрыть без сохранения


nano filename открыть и редактировать файл

cat (+name file) вывести содержимое файла в терминале
cat filename | grep -i текст что ищем - вывод строк с указанным текстом(не регистро зависимый
cat filename | less  вывести содержимое файла в отдельном окне
cat filename filename  объедень два файла для просмотра
cat filename filename  | less  объедень два файла для просмотра в отдельном окне
cat > filename создать файл с возможностью сразу внести в него текст ( повторный запуск будет перезаписывать файл)
cat >> filename добавляет строки в конец файла
cat -b filenamе нумерует заполненые строки
cat -n filename нумерует все строки
cat filename > newfilename сделать копию файла и дать новое имя
cat filename filename > newfilename соеденить два файла и дать новое имя

echo текст  - вывести текст
echo текст > filename   - записать текст в указанный файл
echo текст >> filename - добавить текст к указанному файлу 


find  -name "name*"  поиск файла по имени
find .. -name "*".txt поиск файла по расширению по всем папкам
find . -name "*".txt поиск файла по расширению по всем папкам вперёд
find \foldername -name "*".txt поиск в конкретной папке по расширению файла
find . -type d -name "foldername*" поиск папки по директории вперед 
find .. -type d -name "foldername*"  поиск папки по директории назад

grep (что ищем) ( где ищем)  поиск текста в конкретном файле
grep -i (что ищем) ( где ищем) поиск текста с отключением регистра зависимости (Аа)
grep -v   /  grep -v -i  (что исключить)  ( где ищем) поиск файла с исключением указанной строки
grep (что ищем) *   поиск текста по всем файлам в данной папке
grep -R (что ишем) (где ищем) поиск по папке



git clone (+ ссылка на репозиторий) загрузка репозитория
git status проверка статуса файла
git add (+ имя файла) добавление файла к отслеживанию git
git add -A   добавление всех файла к отслеживанию
git add .   добавление всех файла к отслеживанию
git reset убрать файлы от отслеживания
git commit -m "create имя файла"   запоминает состояние репозитория 
git commit -am "Modify (test_2.json)"  одновременно выполняется команда git add + git commit -m
git reset HEAD~1 отменить последний комит
git log показать все commit  в данном репозитории (в ветке)
git log -(цифра) показать последние (цифра) commit
git log -p будет отобразать изменения в каждом commit
git log --author имя автора    покажет комиты конкретного автора 
git diff   покажет последний комит и что в неё изменялось
git shom покажет последний комит и что в неё изменялось
git shom номер комита покажет какой файл изменялся и что изменялось
git blame filename  покажет какие изменения и каким автором вносились
git blame filename | grep text посмотреть изменения по тексту
git blame filename | grep author посмотреть изменения по автору
git push загрузить на GitHub аккаунт
git pull агрузить c GitHub  локально
git push -u origin +name ветки  добавление ветки на GitHub
git branch  список веток и *указывает где мы находимся
git branch (+имя новой ветки) создание новой ветки бранчи
git branch -m старое имя новое имя   переименовать бранчу
git checkout  filename  отменить изменения в файле
git checkout .  отменить изменения в последних файлах
git checkout -b (+ название новой ветки) создание новой ветки новой бранчи
git checkout (+ имя ветки ) переход между ветками
git merge (+имя ветки) мержим файлы из указанной ветки в ту в которой находимся
git fetch посомтреть изменения на внешнем репозитории

start .   открыть файл 
ctrl + c отмена действия


ping google.com
ping -t google.com пинг без остановки 
ping -c 3 google.com указать количество пакетов
ping -c 3 -i 3 добавить время на отправку  пакета

curl 
curl -L
 
